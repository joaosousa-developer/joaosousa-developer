// <auto-generated />
using System;
using AppBloodWeb.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppBloodWeb.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.AdiministradorModel", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAdmin"));

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdAdmin");

                    b.HasIndex("Id");

                    b.ToTable("Adiministrador");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.AgendaModel", b =>
                {
                    b.Property<int>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAgenda"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.HasKey("IdAgenda");

                    b.HasIndex("IdDoador");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.BolsaDeSangueModel", b =>
                {
                    b.Property<int>("Idbolsa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idbolsa"));

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.Property<string>("TipoSanguineo")
                        .HasColumnType("longtext");

                    b.Property<double>("VolumeMl")
                        .HasColumnType("double");

                    b.HasKey("Idbolsa");

                    b.HasIndex("IdDoador");

                    b.ToTable("BolsaDeSangue");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.DoadorModel", b =>
                {
                    b.Property<int>("IdDoador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDoador"));

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdDoador");

                    b.HasIndex("Id");

                    b.ToTable("Doador");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.HistoricoDoadorModel", b =>
                {
                    b.Property<int>("Idhistorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idhistorico"));

                    b.Property<DateTime>("DataDoacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.Property<string>("TipoDoacao")
                        .HasColumnType("longtext");

                    b.HasKey("Idhistorico");

                    b.HasIndex("IdDoador");

                    b.ToTable("HistoricoDoador");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.PermissaoModel", b =>
                {
                    b.Property<int>("Idpermissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idpermissao"));

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Idpermissao");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemAptidaoModel", b =>
                {
                    b.Property<int>("AptidaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AptidaoId"));

                    b.Property<string>("Apto")
                        .HasColumnType("longtext");

                    b.Property<string>("MotivoInaptidao")
                        .HasColumnType("longtext");

                    b.Property<string>("ObservacoesAdicionais")
                        .HasColumnType("longtext");

                    b.Property<int>("TriagemID")
                        .HasColumnType("int");

                    b.HasKey("AptidaoId");

                    b.HasIndex("TriagemID")
                        .IsUnique();

                    b.ToTable("triagemaptidaomodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemDetalhesModel", b =>
                {
                    b.Property<int>("detalhesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("detalhesId"));

                    b.Property<string>("Alergias")
                        .HasColumnType("longtext");

                    b.Property<string>("ComportamentoRisco")
                        .HasColumnType("longtext");

                    b.Property<string>("HistoricoDoencas")
                        .HasColumnType("longtext");

                    b.Property<string>("Medicamentos")
                        .HasColumnType("longtext");

                    b.Property<string>("ViagensRecentes")
                        .HasColumnType("longtext");

                    b.Property<int>("triagemId")
                        .HasColumnType("int");

                    b.HasKey("detalhesId");

                    b.HasIndex("triagemId")
                        .IsUnique();

                    b.ToTable("triagemdetalhesmodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemModel", b =>
                {
                    b.Property<int>("TriagemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TriagemID"));

                    b.Property<DateTime>("DataTriagem")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Hemoglobina")
                        .HasColumnType("double");

                    b.Property<int>("IdDoador")
                        .HasColumnType("int");

                    b.Property<string>("PressaoArterial")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Pulso")
                        .HasColumnType("int");

                    b.Property<double>("Temperatura")
                        .HasColumnType("double");

                    b.HasKey("TriagemID");

                    b.HasIndex("IdDoador");

                    b.ToTable("triagemodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.UsuariosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Idpermissao")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("municipio")
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .HasColumnType("longtext");

                    b.Property<string>("numeroBI")
                        .HasColumnType("longtext");

                    b.Property<string>("numerotelefone")
                        .HasColumnType("longtext");

                    b.Property<string>("provincia")
                        .HasColumnType("longtext");

                    b.Property<string>("senha")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Idpermissao");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.AdiministradorModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.UsuariosModel", "usuariomodel")
                        .WithMany("adiministrador")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuariomodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.AgendaModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.DoadorModel", "doadormodel")
                        .WithMany("agendamodel")
                        .HasForeignKey("IdDoador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("doadormodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.BolsaDeSangueModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.DoadorModel", "doadormodel")
                        .WithMany("bolsadesangue")
                        .HasForeignKey("IdDoador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("doadormodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.DoadorModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.UsuariosModel", "usuariomodel")
                        .WithMany("doadormodel")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("usuariomodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.HistoricoDoadorModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.DoadorModel", "doadormodel")
                        .WithMany("historicodoadormodel")
                        .HasForeignKey("IdDoador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("doadormodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemAptidaoModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.TriagemModel", "triagemodel")
                        .WithOne("triagemaptidaomodel")
                        .HasForeignKey("AppBloodWeb.Domain.Entities.TriagemAptidaoModel", "TriagemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("triagemodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemDetalhesModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.TriagemModel", "triagemodel")
                        .WithOne("triagemdetalhesmodel")
                        .HasForeignKey("AppBloodWeb.Domain.Entities.TriagemDetalhesModel", "triagemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("triagemodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.DoadorModel", "doadormodel")
                        .WithMany("triagemodel")
                        .HasForeignKey("IdDoador")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("doadormodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.UsuariosModel", b =>
                {
                    b.HasOne("AppBloodWeb.Domain.Entities.PermissaoModel", "permissaomodel")
                        .WithMany("usuariomodel")
                        .HasForeignKey("Idpermissao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("permissaomodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.DoadorModel", b =>
                {
                    b.Navigation("agendamodel");

                    b.Navigation("bolsadesangue");

                    b.Navigation("historicodoadormodel");

                    b.Navigation("triagemodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.PermissaoModel", b =>
                {
                    b.Navigation("usuariomodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.TriagemModel", b =>
                {
                    b.Navigation("triagemaptidaomodel");

                    b.Navigation("triagemdetalhesmodel");
                });

            modelBuilder.Entity("AppBloodWeb.Domain.Entities.UsuariosModel", b =>
                {
                    b.Navigation("adiministrador");

                    b.Navigation("doadormodel");
                });
#pragma warning restore 612, 618
        }
    }
}
